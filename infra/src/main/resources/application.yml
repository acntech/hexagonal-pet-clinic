debug: false

#--------------------
# Application
#--------------------
application:

  datasource:
    name: petclinicdb

  spring:

    filter:
      http-exchange-details-logging-filter:
        http-log-level: BODY # NONE, HEADERS, BODY
        severity-level: TRACE

server:
  port: 8080

spring:

  application:
    name: hexagonal-pet-clinic

  main:
    web-application-type: SERVLET

  banner:
    location: classpath:banner.txt

  jmx:
    enabled: false

  datasource:

    # Hikari connection pool
    hikari:
      initializationFailTimeout: 0  # Fail immediately if the pool cannot initialize
      autoCommit: false  # Rely on explicit transaction management
      connectionTimeout: 30000  # 30 seconds to wait for a connection
      idleTimeout: 300000  # 5 minutes (adjust based on application usage patterns)
      maxLifetime: 1200000  # 20 minutes to recycle connections to prevent stale connections
      leak-detection-threshold: 2000  # Detect unreturned connections held for more than 2 seconds
      connectionTestQuery: SELECT 1  # Optional: Required only if the driver does not support JDBC4
      minimumIdle: 5  # Minimum number of idle connections in the pool
      maximumPoolSize: 20  # Adjust based on application concurrency requirements
      poolName: myHikariPool
      isolateInternalQueries: true  # Isolate HikariCP's internal queries for debugging
      allowPoolSuspension: false  # Prevent pool suspension (rarely needed)
      readOnly: false  # Set to true if the database is read-only
      registerMbeans: false  # Enable MBeans for monitoring with JMX
      validationTimeout: 3000  # Time to wait for a validation query
      transactionIsolation: TRANSACTION_READ_COMMITTED  # Ensure consistent transaction isolation level
      #connectionInitSql: SET SESSION CHARACTERISTICS AS TRANSACTION READ COMMITTED;  # Optional: set default session settings

  jpa:
    open-in-view: false # Prevents LazyInitializationExceptions by closing the session after the request
    #generate-ddl: false # Avoids automatic DDL generation
    show-sql: false # Disable SQL logs (enable for debugging if needed)
    hibernate:
      ddl-auto: validate # Ensures the schema matches the entity mappings; no updates made

      properties:
        javax.persistence.jdbc.blob: true
        hibernate.format_sql: true # Pretty-print SQL logs (useful with show_sql enabled)
        hibernate.use_sql_comments: true # Add comments to SQL for better traceability
        hibernate.generate_statistics: false # Disable for production; enable for performance debugging

#--------------------
# Logging
#--------------------
LOG_PATH: ./log
logging:
  stdout-appender-threshold-level: INFO
  trace-appender-threshold-level: INFO
  level:
    root: INFO
    no.acntech: INFO
    org.springframework: INFO
